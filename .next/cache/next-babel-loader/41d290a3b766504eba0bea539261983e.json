{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Reference: https://github.com/andregardi/use-global-hook\nfunction setState(store, newState, afterUpdateCallback) {\n  store.state = _objectSpread({}, store.state, {}, newState);\n  store.listeners.forEach(listener => {\n    listener.run(store.state);\n  });\n  afterUpdateCallback && afterUpdateCallback();\n}\n\nfunction useCustom(store, React, mapState, mapActions) {\n  const [, originalHook] = React.useState(Object.create(null));\n  const state = mapState ? mapState(store.state) : store.state;\n  const actions = React.useMemo(() => mapActions ? mapActions(store.actions) : store.actions, [mapActions, store.actions]);\n  React.useEffect(() => {\n    const newListener = {\n      oldState: {}\n    };\n    newListener.run = mapState ? newState => {\n      const mappedState = mapState(newState);\n\n      if (mappedState !== newListener.oldState) {\n        newListener.oldState = mappedState;\n        originalHook(mappedState);\n      }\n    } : originalHook;\n    store.listeners.push(newListener);\n    newListener.run(store.state);\n    return () => {\n      store.listeners = store.listeners.filter(listener => listener !== newListener);\n    };\n  }, []); // eslint-disable-line\n\n  return [state, actions];\n}\n\nfunction associateActions(store, actions) {\n  const associatedActions = {};\n  Object.keys(actions).forEach(key => {\n    if (typeof actions[key] === \"function\") {\n      associatedActions[key] = actions[key].bind(null, store);\n    }\n\n    if (typeof actions[key] === \"object\") {\n      associatedActions[key] = associateActions(store, actions[key]);\n    }\n  });\n  return associatedActions;\n}\n\nconst useStore = (React, initialState, actions, initializer) => {\n  const store = {\n    state: initialState,\n    listeners: []\n  };\n  store.setState = setState.bind(null, store);\n  store.actions = associateActions(store, actions);\n  if (initializer) initializer(store);\n  return useCustom.bind(null, store, React);\n};\n\nexport default useStore;","map":{"version":3,"sources":["/home/bigeyestoad/Documents/gitRepos/challenges/upworkNextJS/utils/context/index.js"],"names":["setState","store","newState","afterUpdateCallback","state","listeners","forEach","listener","run","useCustom","React","mapState","mapActions","originalHook","useState","Object","create","actions","useMemo","useEffect","newListener","oldState","mappedState","push","filter","associateActions","associatedActions","keys","key","bind","useStore","initialState","initializer"],"mappings":"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","sourcesContent":["// Reference: https://github.com/andregardi/use-global-hook\n\nfunction setState(store, newState, afterUpdateCallback) {\n    store.state = { ...store.state, ...newState };\n    store.listeners.forEach((listener) => {\n      listener.run(store.state);\n    });\n    afterUpdateCallback && afterUpdateCallback();\n  }\n  \n  function useCustom(store, React, mapState, mapActions) {\n    const [, originalHook] = React.useState(Object.create(null));\n    const state = mapState ? mapState(store.state) : store.state;\n    const actions = React.useMemo(\n      () => (mapActions ? mapActions(store.actions) : store.actions),\n      [mapActions, store.actions]\n    );\n  \n    React.useEffect(() => {\n      const newListener = { oldState: {} };\n      newListener.run = mapState\n        ? newState => {\n            const mappedState = mapState(newState);\n            if (mappedState !== newListener.oldState) {\n              newListener.oldState = mappedState;\n              originalHook(mappedState);\n            }\n          }\n        : originalHook;\n      store.listeners.push(newListener);\n      newListener.run(store.state);\n      return () => {\n        store.listeners = store.listeners.filter(\n          listener => listener !== newListener\n        );\n      };\n    }, []); // eslint-disable-line\n    return [state, actions];\n  }\n  \n  function associateActions(store, actions) {\n    const associatedActions = {};\n    Object.keys(actions).forEach(key => {\n      if (typeof actions[key] === \"function\") {\n        associatedActions[key] = actions[key].bind(null, store);\n      }\n      if (typeof actions[key] === \"object\") {\n        associatedActions[key] = associateActions(store, actions[key]);\n      }\n    });\n    return associatedActions;\n  }\n  \n  const useStore = (React, initialState, actions, initializer) => {\n    const store = { state: initialState, listeners: [] };\n    store.setState = setState.bind(null, store);\n    store.actions = associateActions(store, actions);\n    if (initializer) initializer(store);\n    return useCustom.bind(null, store, React);\n  };\n  \n  export default useStore;"]},"metadata":{},"sourceType":"module"}