{"ast":null,"code":"var _jsxFileName = \"/home/bigeyestoad/Documents/gitRepos/challenges/upworkNextJS/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header\";\nimport useGlobal from \"../utils/context/store/global\";\n\nconst Home = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    firstName: ''\n  }); // TODO: Create local state for first name which will change only on this page. It should also be able to update with global state.\n\n  const [globalState, globalActions] = useGlobal();\n  const {\n    user: {\n      name_first,\n      name_last\n    }\n  } = globalState;\n  /** TODO: Change first or last name which should show across website.\n   * i.e. Create text field that will change global state ALSO with local state on this page.\n   *\n   * This is a small example on how globalActions should be used.*/\n  // const handleNameChange = (event) => {\n  //   const value = event.target.value\n  //   globalActions.user.updateUser({[event.target.name]:value});\n  // }\n  // TODO: Create useEffect to change the last name ONCE upon showing this page.\n\n  const handleChange = label => e => {\n    console.log(label, e.target.value);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Hello World!\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Name: \", name_first, \", \", name_last), __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"First Name\"), \" \", __jsx(\"input\", {\n    onChange: handleChange('firstName'),\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/bigeyestoad/Documents/gitRepos/challenges/upworkNextJS/pages/index.js"],"names":["React","useEffect","useState","Header","useGlobal","Home","values","setValues","firstName","globalState","globalActions","user","name_first","name_last","handleChange","label","e","console","log","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBL,QAAQ,CAAC;AAACM,IAAAA,SAAS,EAAE;AAAZ,GAAD,CAApC,CADiB,CAEjB;;AAEA,QAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BN,SAAS,EAA9C;AACA,QAAM;AACJO,IAAAA,IAAI,EAAE;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd;AADF,MAEFJ,WAFJ;AAIA;;;;AAKA;AACA;AACA;AACA;AAEA;;AAEA,QAAMK,YAAY,GAAIC,KAAD,IAAWC,CAAC,IAAI;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,CAAC,CAACG,MAAF,CAASC,KAA5B;AACD,GAFD;;AAIA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSR,UADT,QACuBC,SADvB,CAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OAC4B;AAAO,IAAA,QAAQ,EAAEC,YAAY,CAAC,WAAD,CAA7B;AAA4C,IAAA,IAAI,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5B,CAPF,CADF;AAaD,CAtCD;;AAwCA,eAAeT,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header\";\nimport useGlobal from \"../utils/context/store/global\";\n\nconst Home = () => {\n  const [values, setValues] = useState({firstName: ''});\n  // TODO: Create local state for first name which will change only on this page. It should also be able to update with global state.\n\n  const [globalState, globalActions] = useGlobal();\n  const {\n    user: { name_first, name_last }\n  } = globalState;\n\n  /** TODO: Change first or last name which should show across website.\n   * i.e. Create text field that will change global state ALSO with local state on this page.\n   *\n   * This is a small example on how globalActions should be used.*/\n\n  // const handleNameChange = (event) => {\n  //   const value = event.target.value\n  //   globalActions.user.updateUser({[event.target.name]:value});\n  // }\n\n  // TODO: Create useEffect to change the last name ONCE upon showing this page.\n\n  const handleChange = (label) => e => {\n    console.log(label, e.target.value);\n  };\n\n  return (\n    <>\n      <Header />\n      <h1>Hello World!</h1>\n      <p>\n        Name: {name_first}, {name_last}\n      </p>\n      <hr />\n      <div>\n        <label>First Name</label> <input onChange={handleChange('firstName')} type=\"text\" />\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}