{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Reference: https://github.com/andregardi/use-global-hook\nfunction setState(store, newState, afterUpdateCallback) {\n  store.state = _objectSpread({}, store.state, {}, newState);\n  store.listeners.forEach(function (listener) {\n    listener.run(store.state);\n  });\n  afterUpdateCallback && afterUpdateCallback();\n}\n\nfunction useCustom(store, React, mapState, mapActions) {\n  var _React$useState = React.useState(_Object$create(null)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      originalHook = _React$useState2[1];\n\n  var state = mapState ? mapState(store.state) : store.state;\n  var actions = React.useMemo(function () {\n    return mapActions ? mapActions(store.actions) : store.actions;\n  }, [mapActions, store.actions]);\n  React.useEffect(function () {\n    var newListener = {\n      oldState: {}\n    };\n    newListener.run = mapState ? function (newState) {\n      var mappedState = mapState(newState);\n\n      if (mappedState !== newListener.oldState) {\n        newListener.oldState = mappedState;\n        originalHook(mappedState);\n      }\n    } : originalHook;\n    store.listeners.push(newListener);\n    newListener.run(store.state);\n    return function () {\n      store.listeners = store.listeners.filter(function (listener) {\n        return listener !== newListener;\n      });\n    };\n  }, []); // eslint-disable-line\n\n  return [state, actions];\n}\n\nfunction associateActions(store, actions) {\n  var associatedActions = {};\n\n  _Object$keys(actions).forEach(function (key) {\n    if (typeof actions[key] === \"function\") {\n      associatedActions[key] = actions[key].bind(null, store);\n    }\n\n    if (typeof actions[key] === \"object\") {\n      associatedActions[key] = associateActions(store, actions[key]);\n    }\n  });\n\n  return associatedActions;\n}\n\nvar useStore = function useStore(React, initialState, actions, initializer) {\n  var store = {\n    state: initialState,\n    listeners: []\n  };\n  store.setState = setState.bind(null, store);\n  store.actions = associateActions(store, actions);\n  if (initializer) initializer(store);\n  return useCustom.bind(null, store, React);\n};\n\nexport default useStore;","map":{"version":3,"sources":["/home/bigeyestoad/Documents/gitRepos/challenges/upworkNextJS/utils/context/index.js"],"names":["setState","store","newState","afterUpdateCallback","state","listeners","forEach","listener","run","useCustom","React","mapState","mapActions","useState","originalHook","actions","useMemo","useEffect","newListener","oldState","mappedState","push","filter","associateActions","associatedActions","key","bind","useStore","initialState","initializer"],"mappings":"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","sourcesContent":["// Reference: https://github.com/andregardi/use-global-hook\n\nfunction setState(store, newState, afterUpdateCallback) {\n    store.state = { ...store.state, ...newState };\n    store.listeners.forEach((listener) => {\n      listener.run(store.state);\n    });\n    afterUpdateCallback && afterUpdateCallback();\n  }\n  \n  function useCustom(store, React, mapState, mapActions) {\n    const [, originalHook] = React.useState(Object.create(null));\n    const state = mapState ? mapState(store.state) : store.state;\n    const actions = React.useMemo(\n      () => (mapActions ? mapActions(store.actions) : store.actions),\n      [mapActions, store.actions]\n    );\n  \n    React.useEffect(() => {\n      const newListener = { oldState: {} };\n      newListener.run = mapState\n        ? newState => {\n            const mappedState = mapState(newState);\n            if (mappedState !== newListener.oldState) {\n              newListener.oldState = mappedState;\n              originalHook(mappedState);\n            }\n          }\n        : originalHook;\n      store.listeners.push(newListener);\n      newListener.run(store.state);\n      return () => {\n        store.listeners = store.listeners.filter(\n          listener => listener !== newListener\n        );\n      };\n    }, []); // eslint-disable-line\n    return [state, actions];\n  }\n  \n  function associateActions(store, actions) {\n    const associatedActions = {};\n    Object.keys(actions).forEach(key => {\n      if (typeof actions[key] === \"function\") {\n        associatedActions[key] = actions[key].bind(null, store);\n      }\n      if (typeof actions[key] === \"object\") {\n        associatedActions[key] = associateActions(store, actions[key]);\n      }\n    });\n    return associatedActions;\n  }\n  \n  const useStore = (React, initialState, actions, initializer) => {\n    const store = { state: initialState, listeners: [] };\n    store.setState = setState.bind(null, store);\n    store.actions = associateActions(store, actions);\n    if (initializer) initializer(store);\n    return useCustom.bind(null, store, React);\n  };\n  \n  export default useStore;"]},"metadata":{},"sourceType":"module"}