{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bigeyestoad/Documents/gitRepos/challenges/upworkNextJS/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header\";\nimport useGlobal from \"../utils/context/store/global\";\n\nvar Home = function Home() {\n  // TODO: Create local state for first name which will change only on this page. It should also be able to update with global state.\n  var _useGlobal = useGlobal(),\n      _useGlobal2 = _slicedToArray(_useGlobal, 2),\n      globalState = _useGlobal2[0],\n      globalActions = _useGlobal2[1];\n\n  var _globalState$user = globalState.user,\n      name_first = _globalState$user.name_first,\n      name_last = _globalState$user.name_last;\n  var _globalActions$user = globalActions.user,\n      setUser = _globalActions$user.setUser,\n      updateUser = _globalActions$user.updateUser;\n\n  var _useState = useState({\n    firstName: name_first,\n    lastName: name_last\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n  /** TODO: Change first or last name which should show across website.\n   * i.e. Create text field that will change global state ALSO with local state on this page.\n   *\n   * This is a small example on how globalActions should be used.*/\n  // const handleNameChange = (event) => {\n  //   const value = event.target.value\n  //   globalActions.user.updateUser({[event.target.name]:value});\n  // }\n  // TODO: Create useEffect to change the last name ONCE upon showing this page.\n\n\n  var handleInputChange = function handleInputChange(label) {\n    return function (event) {\n      var value = event.target.value;\n      setValues(_objectSpread({}, values, _defineProperty({}, label, value)));\n    };\n  };\n\n  console.log(values);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Hello World!\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Name: \", name_first, \", \", name_last), __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"First Name\"), \" \", __jsx(\"input\", {\n    onChange: handleInputChange(\"firstName\"),\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    onChange: handleInputChange(\"lastName\"),\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/bigeyestoad/Documents/gitRepos/challenges/upworkNextJS/pages/index.js"],"names":["React","useEffect","useState","Header","useGlobal","Home","globalState","globalActions","user","name_first","name_last","setUser","updateUser","firstName","lastName","values","setValues","handleInputChange","label","event","value","target","console","log"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB;AADiB,mBAGoBD,SAAS,EAH7B;AAAA;AAAA,MAGVE,WAHU;AAAA,MAGGC,aAHH;;AAAA,0BAMbD,WANa,CAKfE,IALe;AAAA,MAKPC,UALO,qBAKPA,UALO;AAAA,MAKKC,SALL,qBAKKA,SALL;AAAA,4BASbH,aATa,CAQfC,IARe;AAAA,MAQPG,OARO,uBAQPA,OARO;AAAA,MAQEC,UARF,uBAQEA,UARF;;AAAA,kBAWWV,QAAQ,CAAC;AACnCW,IAAAA,SAAS,EAAEJ,UADwB;AAEnCK,IAAAA,QAAQ,EAAEJ;AAFyB,GAAD,CAXnB;AAAA,MAWVK,MAXU;AAAA,MAWFC,SAXE;AAejB;;;;AAKA;AACA;AACA;AACA;AAEA;;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK;AAAA,WAAI,UAAAC,KAAK,EAAI;AAC1C,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACAJ,MAAAA,SAAS,mBAAMD,MAAN,sBAAeG,KAAf,EAAuBE,KAAvB,GAAT;AACD,KAH8B;AAAA,GAA/B;;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSN,UADT,QACuBC,SADvB,CAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAC4B,GAD5B,EAEE;AAAO,IAAA,QAAQ,EAAEO,iBAAiB,CAAC,WAAD,CAAlC;AAAiD,IAAA,IAAI,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,QAAQ,EAAEA,iBAAiB,CAAC,UAAD,CAAlC;AAAgD,IAAA,IAAI,EAAC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAPF,CADF;AAeD,CA/CD;;AAiDA,eAAeZ,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header\";\nimport useGlobal from \"../utils/context/store/global\";\n\nconst Home = () => {\n  // TODO: Create local state for first name which will change only on this page. It should also be able to update with global state.\n\n  const [globalState, globalActions] = useGlobal();\n  const {\n    user: { name_first, name_last }\n  } = globalState;\n  const {\n    user: { setUser, updateUser }\n  } = globalActions;\n\n  const [values, setValues] = useState({\n    firstName: name_first,\n    lastName: name_last\n  });\n  /** TODO: Change first or last name which should show across website.\n   * i.e. Create text field that will change global state ALSO with local state on this page.\n   *\n   * This is a small example on how globalActions should be used.*/\n\n  // const handleNameChange = (event) => {\n  //   const value = event.target.value\n  //   globalActions.user.updateUser({[event.target.name]:value});\n  // }\n\n  // TODO: Create useEffect to change the last name ONCE upon showing this page.\n\n  const handleInputChange = label => event => {\n    const value = event.target.value;\n    setValues({ ...values, [label]: value });\n  };\n  console.log(values);\n  return (\n    <>\n      <Header />\n      <h1>Hello World!</h1>\n      <p>\n        Name: {name_first}, {name_last}\n      </p>\n      <hr />\n      <div>\n        <label>First Name</label>{\" \"}\n        <input onChange={handleInputChange(\"firstName\")} type=\"text\" />\n        <input onChange={handleInputChange(\"lastName\")} type=\"text\" />\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}