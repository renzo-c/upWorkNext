{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bigeyestoad/Documents/gitRepos/challenges/upworkNextJS/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Header from '../components/header';\nimport useGlobal from '../utils/context/store/global';\n\nvar Home = function Home() {\n  // TODO: Create local state for first name which will change only on this page. It should also be able to update with global state.\n  var _useGlobal = useGlobal(),\n      _useGlobal2 = _slicedToArray(_useGlobal, 2),\n      globalState = _useGlobal2[0],\n      globalActions = _useGlobal2[1];\n\n  var _globalState$user = globalState.user,\n      name_first = _globalState$user.name_first,\n      name_last = _globalState$user.name_last;\n  /** TODO: Change first or last name which should show across website. \n   * i.e. Create text field that will change global state ALSO with local state on this page.\n   * \n   * This is a small example on how globalActions should be used.*/\n  // const handleNameChange = (event) => {\n  //   const value = event.target.value\n  //   globalActions.user.updateUser({[event.target.name]:value});\n  // }\n  // TODO: Create useEffect to change the last name ONCE upon showing this page.\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Hello World!\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Name: \", name_first, \", \", name_last));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/bigeyestoad/Documents/gitRepos/challenges/upworkNextJS/pages/index.js"],"names":["React","useEffect","Header","useGlobal","Home","globalState","globalActions","user","name_first","name_last"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEjB;AAFiB,mBAIoBD,SAAS,EAJ7B;AAAA;AAAA,MAIVE,WAJU;AAAA,MAIGC,aAJH;;AAAA,0BAK2BD,WAL3B,CAKTE,IALS;AAAA,MAKDC,UALC,qBAKDA,UALC;AAAA,MAKWC,SALX,qBAKWA,SALX;AAOjB;;;;AAIA;AACA;AACA;AACA;AAEA;;AAEA,SAAQ,4BACN,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,EAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFM,EAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUD,UAAV,QAAwBC,SAAxB,CAHM,CAAR;AAOD,CAzBD;;AA4BA,eAAeL,IAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport Header from '../components/header'\nimport useGlobal from '../utils/context/store/global'\n\n\n\nconst Home = () => {\n\n  // TODO: Create local state for first name which will change only on this page. It should also be able to update with global state.\n\n  const [globalState, globalActions] = useGlobal();\n  const { user: { name_first, name_last } } = globalState\n\n  /** TODO: Change first or last name which should show across website. \n   * i.e. Create text field that will change global state ALSO with local state on this page.\n   * \n   * This is a small example on how globalActions should be used.*/ \n  // const handleNameChange = (event) => {\n  //   const value = event.target.value\n  //   globalActions.user.updateUser({[event.target.name]:value});\n  // }\n\n  // TODO: Create useEffect to change the last name ONCE upon showing this page.\n\n  return (<>\n    <Header />\n    <h1>Hello World!</h1>\n    <p>Name: {name_first}, {name_last}</p>\n  </>\n  )\n\n}\n\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}