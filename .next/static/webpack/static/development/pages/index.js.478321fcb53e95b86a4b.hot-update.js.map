{"version":3,"file":"static/webpack/static/development/pages/index.js.478321fcb53e95b86a4b.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header\";\nimport useGlobal from \"../utils/context/store/global\";\n\nconst Home = () => {\n  // TODO: Create local state for first name which will change only on this page. It should also be able to update with global state.\n\n  const [globalState, globalActions] = useGlobal();\n  const {\n    user: { name_first, name_last }\n  } = globalState;\n  const {\n    user: { setUser, updateUser }\n  } = globalActions;\n\n  const [values, setValues] = useState({\n    firstName: name_first,\n    lastName: name_last\n  });\n  /** TODO: Change first or last name which should show across website.\n   * i.e. Create text field that will change global state ALSO with local state on this page.\n   *\n   * This is a small example on how globalActions should be used.*/\n\n  // const handleNameChange = (event) => {\n  //   const value = event.target.value\n  //   globalActions.user.updateUser({[event.target.name]:value});\n  // }\n\n  // TODO: Create useEffect to change the last name ONCE upon showing this page.\n\n  const handleInputChange = label => event => {\n    const value = event.target.value;\n    setValues({ ...values, [label]: value });\n  };\n  console.log(values);\n  const {firstName, lastName} = values\n  return (\n    <>\n      <Header />\n      <h1>Hello World!</h1>\n      <p>\n        Name: {name_first}, {name_last}\n      </p>\n      <hr />\n      <div>\n        <label>First Name</label>{\" \"}\n        <input onChange={handleInputChange(\"firstName\")} value={firstName} type=\"text\" />\n      </div>\n      <div>\n        <label>Last Name</label>{\" \"}\n        <input onChange={handleInputChange(\"lastName\")} lastName={lastName} type=\"text\" />\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAYA;AACA;AAFA;AAXA;AAAA;AAeA;;;;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAGA;AA/BA;AAAA;AAiCA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}